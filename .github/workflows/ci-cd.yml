name: CI/CD Pipeline with Poisoning Experiments
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  test-and-train-experiments:
    runs-on: ubuntu-latest
    env:
      # MLflow configuration using secrets
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_ARTIFACT_ROOT: "gs://mlops-course-wide-link-461605-p9-unique/mlflow-artifacts"
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Pytest for Data and Model Validation
      run: |
        python -m pytest tests/test_data_validation.py -v
        python -m pytest tests/test_model_evaluation.py -v
      
    - name: Authenticate with GCP for MLflow Artifacts
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: Setup CML for reporting
      uses: iterative/setup-cml@v1
    - name: Run All Data Poisoning Experiments
      run: |
        # This single script now handles all training, evaluation, and logging
        python run_experiments.py
    - name: Generate CML Report from Experiment Results
      run: |
        # Start the report file
        echo "## ðŸ“Š Data Poisoning Experiment Results" > report.md
        echo "" >> report.md
        echo "| Poisoning Level | Full Dataset Accuracy |" >> report.md
        echo "|-----------------|-----------------------|" >> report.md
        
        # Create a temporary Python script to generate the table rows
        cat > generate_report_rows.py << 'EOF'
        import json
        
        with open('models/all_experiment_results.json', 'r') as f:
            results = json.load(f)
        
        for name, data in results.items():
            level = data['poisoning_level'] * 100
            acc = data['evaluation_metrics']['full_dataset_accuracy']
            print(f'| {level:.0f}% | {acc:.4f} |')
        EOF
        
        # Run the Python script and append results to the report
        python generate_report_rows.py >> report.md
        
        echo "" >> report.md
        echo "### Confusion Matrix (Baseline - 0% Poisoning)" >> report.md
        # The confusion matrix from the last run (0%) will be used for the report
        echo '![](./models/confusion_matrix.png)' >> report.md
        echo "" >> report.md
        echo "Detailed logs and artifacts for each run are available in the [MLflow UI](${{ secrets.MLFLOW_TRACKING_URI }})." >> report.md
        
        # Clean up the temporary script
        rm generate_report_rows.py
    - name: Create or Update CML Comment on Pull Request
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cml comment create report.md
